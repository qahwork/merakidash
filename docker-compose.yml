# Meraki Network Analytics Dashboard Pro - Docker Compose
# Production-ready configuration for Ubuntu Server
# =====================================================

version: '3.8'

services:
  # Main Streamlit Application
  meraki-dashboard:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: meraki-dashboard
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true
    volumes:
      - ./config.py:/app/config.py:ro
      - ./logs:/app/logs
      - dashboard_data:/app/data
    networks:
      - meraki-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: meraki-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      meraki-dashboard:
        condition: service_healthy
    networks:
      - meraki-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Webhook Receiver (Optional)
  webhook-receiver:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: meraki-webhook
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - WEBHOOK_PORT=8080
      - WEBHOOK_ENABLED=true
    volumes:
      - ./config.py:/app/config.py:ro
      - ./logs:/app/logs
    networks:
      - meraki-network
    profiles:
      - webhook
    command: ["python", "webhook_receiver.py"]

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: meraki-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - meraki-network
    profiles:
      - cache
    command: redis-server --appendonly yes

# Networks
networks:
  meraki-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  dashboard_data:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local
